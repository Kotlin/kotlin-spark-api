<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jetbrains.kotlinx.spark</groupId>
    <artifactId>kotlin-spark-api-parent</artifactId>
    <version>1.0.0-preview2-SNAPSHOT</version>
  </parent>

  <artifactId>kotlin-spark-api-2.4.1_2.12</artifactId>
  <packaging>jar</packaging>

  <name>Kotlin Spark API (2.4.1+)</name>
  <description>Kotlin API compatible with spark 2.4.1+ Kotlin for Apache Spark</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <kotlin.code.style>official</kotlin.code.style>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlinx.spark</groupId>
      <artifactId>core-2.4.1_2.12</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlinx.spark</groupId>
      <artifactId>kotlin-api-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_2.12</artifactId>
      <version>2.4.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.kotest</groupId>
      <artifactId>kotest-runner-junit5-jvm</artifactId>
      <version>${kotest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.kotest</groupId>
      <artifactId>kotest-extensions-allure-jvm</artifactId>
      <version>${kotest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>klaxon</artifactId>
      <version>5.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.tutteli.atrium</groupId>
      <artifactId>atrium-fluent-en_GB</artifactId>
      <version>${atrium.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/main/kotlin</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>

    <plugins>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <myIncremental>true</myIncremental>
              <jvmTarget>1.8</jvmTarget>
              <args>
                <arg>-Xopt-in=kotlin.RequiresOptIn</arg>
                <arg>-XXLanguage:+InlineClasses</arg>
              </args>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <phase>test-compile</phase>
            <configuration>
              <myIncremental>true</myIncremental>
              <jvmTarget>1.8</jvmTarget>
              <args>
                <arg>-Xopt-in=kotlin.RequiresOptIn</arg>
                <arg>-XXLanguage:+InlineClasses</arg>
              </args>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M5</version>
        <configuration>
          <enableProcessChecker>native</enableProcessChecker>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jetbrains.dokka</groupId>
        <artifactId>dokka-maven-plugin</artifactId>
        <version>${dokka.version}</version>
        <configuration>
          <jdkVersion>8</jdkVersion>
        </configuration>
        <executions>
          <execution>
            <id>dokka</id>
            <goals>
              <goal>dokka</goal>
            </goals>
            <phase>pre-site</phase>
          </execution>
          <execution>
            <id>javadocjar</id>
            <goals>
              <goal>javadocJar</goal>
            </goals>
            <phase>pre-integration-test</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.qameta.allure</groupId>
        <artifactId>allure-maven</artifactId>
        <version>2.10.0</version>
        <configuration>
          <resultsDirectory>${project.basedir}/allure-results</resultsDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.6</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>jcenter</id>
      <url>https://jcenter.bintray.com/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>jcenter</id>
      <name>JCenter</name>
      <url>https://jcenter.bintray.com/</url>
    </pluginRepository>
  </pluginRepositories>
</project>
