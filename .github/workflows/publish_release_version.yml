name: Deploy release version to Maven Central

on:
  release:
    types: [created]

jobs:
  build-and-deploy-mvn-central:
    strategy:
      matrix:
        scala: [ "2.12.19", "2.13.13" ]
        spark: [ "3.4.2", "3.5.1" ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 11
          check-latest: true

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/jdks
          key: "${{ runner.os }}-gradle-spark-${{ matrix.spark }}-${{ matrix.scala }}"
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Upload to Maven Central with Gradle
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_TOKEN }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        run: >
          ./gradlew 
          -Pspark=${{ matrix.spark }} 
          -Pscala=${{ matrix.scala }} 
          -PskipScalaOnlyDependent=${{ matrix.spark != matrix.spark[0] }} 
          clean 
          publishMavenPublicationToMavenCentralRepository
          --scan
        


